<?php$module_info = [		array(				"module" => "om_so",				"class" => "om_so_header",				"key_field" => "om_so_type",				"primary_column" => "om_so_header_id"		),		array(				"module" => "om_so",				"class" => "om_so_line",				"key_field" => "item_description",				"primary_column" => "om_so_line_id"		)];$pageTitle = " PO - Create & Update all POs ";$view_path = "om_so_view";?><?php include_once("../../include/basics/header.inc"); ?> <script type='text/javascript' src="om_so.js" ></script><link href="om_so.css" media="all" rel="stylesheet" type="text/css" /><?php$class = $class_first = 'om_so_header';$$class = $$class_first = &$om_so_header;$class_second = 'om_so_line';$$class_second = &$om_so_line;$class_third = 'om_so_detail';$$class_third = &$om_so_detail;?><?phpif (!empty($_GET["om_so_header_id"])) { $om_so_header_id = htmlentities($_GET["om_so_header_id"]);} elseif (!empty($_POST["om_so_header_id"][0])) { $om_so_header_id = $_POST["om_so_header_id"][0];} else { $om_so_line = new om_so_line(); $om_so_line_object = array(); array_push($om_so_line_object, $om_so_line);//	$field_array = om_so_line::$field_array;}if (!empty($om_so_header_id)) { $om_so_line_object = om_so_line::find_by_om_so_headerId($om_so_header_id); //assign the item number to the object foreach ($om_so_line_object as &$om_so_lines){	if(!empty($om_so_lines->item_id)){	 $item = item::find_by_id($om_so_lines->item_id);	 $om_so_lines->item_number = $item->item_number;	} }// echo "<pre>";// print_r($om_so_line_object); if (count($om_so_line_object) == 0) {	$om_so_line = new om_so_line;	$om_so_line_object = array();	array_push($om_so_line_object, $om_so_line); }}if ((!empty($_GET["supplier_number"])) && (!empty($_GET["org_id"]))) { $supplier_number = $_GET["supplier_number"]; $org_id = $_GET["org_id"]; if (supplier::find_by_supplierNumber_OrgId($supplier_number, $org_id)) {	$supplier = supplier::find_by_supplierNumber_OrgId($supplier_number, $org_id);	$org = org::find_by_id($supplier->org_id);	foreach (supplier::$account_array as $key => $value) {	 if (!empty($supplier->$value)) {		$coa = coa_combination::find_by_id($supplier->$value);		if (count($supplier) != 0) {		 $supplier->$value = $coa->combination;		} else {		 $supplier->$value = "";		}	 }	} } else {	$msg = "Item or Item-Organization is not defined!!"; }}//check all the assigned business orgs?><?php//asign values of fields on form but not in databse only if $$class->$primary_cloumn is not nulif (!empty($$class->om_so_header_id)) { $supplier_details = supplier::find_by_id($$class->supplier_id); $supplier_name_statement = form::text_field('supplier_name', $supplier_details->supplier_name, '30'); $supplier_number_statement = form::text_field('supplier_number', $supplier_details->supplier_number, '30'); $supplier_site = supplier_site::find_by_id($$class->supplier_site_id); $supplier_site_obj = []; array_push($supplier_site_obj, $supplier_site); $supplier_site_name_statement = form::select_field_from_object('supplier_site_id', $supplier_site_obj, 'supplier_site_id', 'supplier_site_name',$$class->supplier_site_id,'supplier_site_id');  $om_so_currency_statement = form::select_field_from_object('currency', option_header::currencies(), 'option_line_code', 'option_line_code', $$class->currency, 'currency'); $om_so_paymentTerm_statement = form::select_field_from_object('payment_term_id', payment_term::find_all(), 'payment_term_id', 'payment_term', $$class->payment_term_id, 'payment_term_id');}?><?phpif (!empty($msg)) { $show_message = '<div class="error">'; foreach ($msg as $key => $value) {	$x = $key + 1;	$show_message .= 'Message ' . $x . ' : ' . $value . '<br />'; } $show_message .= '</div>';}?>